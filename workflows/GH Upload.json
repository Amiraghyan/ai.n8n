{
  "active": true,
  "connections": {
    "On clicking 'execute'": {
      "main": [
        [
          {
            "node": "Globals",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "github_status": {
      "main": [
        [
          {
            "node": "same",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "different",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "new",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "same": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "different": {
      "main": [
        [
          {
            "node": "GitHub Edit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "new": {
      "main": [
        [
          {
            "node": "GitHub Create",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub Edit": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub Create": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OneAtATime": {
      "main": [
        [
          {
            "node": "GitHub",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Globals": {
      "main": [
        [
          {
            "node": "n8n",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Every 12 hours": {
      "main": [
        [
          {
            "node": "Globals",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "n8n": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "isDiffOrNew",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "isDiffOrNew": {
      "main": [
        [
          {
            "node": "github_status",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "OneAtATime1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub1": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "github_status1": {
      "main": [
        [
          {
            "node": "same1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "different1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "new1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "same1": {
      "main": [
        [
          {
            "node": "OneAtATime1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "different1": {
      "main": [
        [
          {
            "node": "GitHub Edit1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "new1": {
      "main": [
        [
          {
            "node": "GitHub Create1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub Edit1": {
      "main": [
        [
          {
            "node": "OneAtATime1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub Create1": {
      "main": [
        [
          {
            "node": "OneAtATime1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OneAtATime1": {
      "main": [
        [
          {
            "node": "GitHub1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "isDiffOrNew1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "isDiffOrNew1": {
      "main": [
        [
          {
            "node": "github_status1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "OneAtATime1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-09-01T11:17:14.747Z",
  "id": "E8wFBJaLslhiBOP8",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "GH Upload",
  "nodes": [
    {
      "parameters": {},
      "id": "22070110-1996-4fd5-8ed2-37d2dfadc8f2",
      "name": "On clicking 'execute'",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        -805,
        535
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "get",
        "owner": "={{$node[\"Globals\"].json[\"repo\"][\"owner\"]}}",
        "repository": "={{$node[\"Globals\"].json[\"repo\"][\"name\"]}}",
        "filePath": "={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{$json[\"name\"]}}.json",
        "asBinaryProperty": false,
        "additionalParameters": {}
      },
      "id": "3cbcfb96-1290-4a4e-9683-d0c4df76d4a1",
      "name": "GitHub",
      "type": "n8n-nodes-base.github",
      "position": [
        260,
        500
      ],
      "typeVersion": 1,
      "alwaysOutputData": true,
      "webhookId": "82cd3abe-9ad5-47a5-a184-9ac6fd9bffac",
      "credentials": {
        "githubApi": {
          "id": "X6bXppeDH36EAEvR",
          "name": "GitHub account"
        }
      },
      "continueOnFail": true
    },
    {
      "parameters": {
        "dataType": "string",
        "value1": "={{$json[\"github_status\"]}}",
        "rules": {
          "rules": [
            {
              "value2": "same"
            },
            {
              "value2": "different",
              "output": 1
            },
            {
              "value2": "new",
              "output": 2
            }
          ]
        }
      },
      "id": "4c924d31-2f0d-491c-9b50-4146d3dd6c71",
      "name": "github_status",
      "type": "n8n-nodes-base.switch",
      "position": [
        900,
        640
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "698d24b4-15b4-405d-9687-646b95ef8fdf",
      "name": "same",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1140,
        440
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "46f1f9d4-aa3b-485f-b090-abc9a831612e",
      "name": "different",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1140,
        640
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "648b0545-993d-418f-929f-08c016df7b85",
      "name": "new",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1140,
        820
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "edit",
        "owner": "={{$node[\"Globals\"].json[\"repo\"][\"owner\"]}}",
        "repository": "={{$node[\"Globals\"].json[\"repo\"][\"name\"]}}",
        "filePath": "={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{$node[\"OneAtATime\"].json[\"name\"]}}.json",
        "fileContent": "={{ $json.n8n_data_stringy }}",
        "commitMessage": "=[N8N Backup] {{$node[\"OneAtATime\"].json[\"name\"]}}.json ({{$json[\"github_status\"]}})"
      },
      "id": "e0525ba4-fd2f-4da0-a119-71f6443a28f0",
      "name": "GitHub Edit",
      "type": "n8n-nodes-base.github",
      "position": [
        1320,
        640
      ],
      "typeVersion": 1,
      "webhookId": "bce2221b-2036-4620-a1c9-88bfb263f4bf",
      "credentials": {
        "githubApi": {
          "id": "X6bXppeDH36EAEvR",
          "name": "GitHub account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "resource": "file",
        "owner": "={{$node[\"Globals\"].json[\"repo\"][\"owner\"]}}",
        "repository": "={{$node[\"Globals\"].json[\"repo\"][\"name\"]}}",
        "filePath": "={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{$node[\"OneAtATime\"].json[\"name\"]}}.json",
        "fileContent": "={{ $json.n8n_data_stringy }}",
        "commitMessage": "=[N8N Backup] {{$node[\"OneAtATime\"].json[\"name\"]}}.json ({{$json[\"github_status\"]}})"
      },
      "id": "ccc87aef-4755-400b-85fc-0b2ba23857e9",
      "name": "GitHub Create",
      "type": "n8n-nodes-base.github",
      "position": [
        1320,
        820
      ],
      "typeVersion": 1,
      "webhookId": "feb0ba26-c9b1-4b26-aea4-0dc5c9c5a4a4",
      "credentials": {
        "githubApi": {
          "id": "X6bXppeDH36EAEvR",
          "name": "GitHub account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "batchSize": 1,
        "options": {}
      },
      "id": "afeacabb-273b-4e9c-a81e-039baa7a57fc",
      "name": "OneAtATime",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        40,
        660
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "repo.owner",
              "value": "GaturaN"
            },
            {
              "name": "repo.name",
              "value": "ai.n8n"
            },
            {
              "name": "repo.path",
              "value": "workflows/"
            },
            {
              "name": "private.repo",
              "value": "private.n8n"
            }
          ]
        },
        "options": {}
      },
      "id": "57e6e062-957e-4136-8b03-5e9f870d43c2",
      "name": "Globals",
      "type": "n8n-nodes-base.set",
      "position": [
        -620,
        660
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "triggerTimes": {
          "item": [
            {
              "mode": "everyX",
              "value": 48
            }
          ]
        }
      },
      "id": "4855a32b-43dc-4fa0-b9aa-0e0027a26a4b",
      "name": "Every 12 hours",
      "type": "n8n-nodes-base.cron",
      "position": [
        -805,
        795
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Workflow Backups\nThis workflow will automatically backup your workflows to your Github account every 12 hours.\n\n### Setup\nOpen Globals and update the values below\n**repo.owner:** This is your Github username\n**repo.name:** This is the name of your repository\n**repo.path:** This is the folder to use within the repository, If it doesn't exist it will be created.\n\nIf your username was `n8n-io` and your repository was called `n8n-backups` and you wanted the workflows to go into a `workflows` folder you would set:\n\nrepo.owner - n8n-io\nrepo.name - n8n-backups\nrepo.path - workflows",
        "height": 464.79920462713443,
        "width": 389.78906250000017
      },
      "id": "a8c8a1bc-2810-46f0-9ad3-0b1e1bd1f28e",
      "name": "Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1260,
        440
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Single Item Loop\nWe process each workflow item one at a time, We first check Github to see if a file exists then we merge the Github Data and the API item so we can check if the values match in the function node `isDiffOrNew` we then set a status of `same`, `different` or `new`",
        "height": 424.04333333333386,
        "width": 755.2349999999991
      },
      "id": "559817ea-d7ac-449f-ab26-37917279f25b",
      "name": "Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -140,
        400
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Save the data\nUsing the switch node we work out what to do based on the previous status,  If it is the same we do nothing, If it is different we update the file in Github and if it is new we create a new file. After this is done we loop back to the Split in Batches node (OneAtAtTime) to start the process again.",
        "height": 693.9283333333326,
        "width": 666.4416666666662
      },
      "id": "05017e31-9e17-4c06-b50c-cb064aea4d33",
      "name": "Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        640,
        320
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "filters": {},
        "requestOptions": {}
      },
      "id": "ab82fd79-eb43-42fe-9c66-35e4526b9a8a",
      "name": "n8n",
      "type": "n8n-nodes-base.n8n",
      "position": [
        -380,
        660
      ],
      "typeVersion": 1,
      "credentials": {
        "n8nApi": {
          "id": "KH6RtlUHiFKqBMJV",
          "name": "n8n account 2"
        }
      }
    },
    {
      "parameters": {},
      "id": "4a5ceb0b-ebc5-48b6-b0dc-b96f7c2cfc7c",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "position": [
        480,
        640
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "jsCode": "// File Returned with Content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Get JSON Objects\n  var origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64'));\n  var n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON Objects\n  var orderedOriginal = {}\n  var orderedActual = {}\n  \n  Object.keys(origWorkflow).sort().forEach(function(key) {\n    orderedOriginal[key] = origWorkflow[key];\n  });\n  \n  Object.keys(n8nWorkflow).sort().forEach(function(key) {\n    orderedActual[key] = n8nWorkflow[key];\n  });\n\n  // Determine Difference\n  if ( JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual) ) {\n    $input.all()[0].json.github_status = \"same\";\n    $input.all()[0].json.content_decoded = orderedOriginal;\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.content_decoded = orderedOriginal;\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n// No File Returned / New Workflow\n} else {\n  // Order JSON Object\n  var n8nWorkflow = ($input.all()[1].json);\n  var orderedActual = {}\n  Object.keys(n8nWorkflow).sort().forEach(function(key) {\n    orderedActual[key] = n8nWorkflow[key];\n  });\n  \n  // Proper Formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return Items\nreturn $input.all();"
      },
      "id": "911d90bd-696f-4328-8d41-4f0b8111ac2c",
      "name": "isDiffOrNew",
      "type": "n8n-nodes-base.code",
      "position": [
        660,
        640
      ],
      "typeVersion": 1,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "74759a6b-f42b-4f8f-b1ee-77ed60622943",
              "leftValue": "={{ $json.tags }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -380,
        880
      ],
      "id": "d9738826-cfc6-4fc9-bb49-21539b9d29e4",
      "name": "If"
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "get",
        "owner": "={{$node[\"Globals\"].json[\"repo\"][\"owner\"]}}",
        "repository": {
          "__rl": true,
          "value": "={{ $('Globals').item.json.private.repo }}"
        },
        "filePath": "={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{$json[\"name\"]}}.json",
        "asBinaryProperty": false,
        "additionalParameters": {}
      },
      "id": "229ff7db-40e8-48b6-9f0e-0b39619f3dc2",
      "name": "GitHub1",
      "type": "n8n-nodes-base.github",
      "position": [
        260,
        1280
      ],
      "typeVersion": 1,
      "alwaysOutputData": true,
      "webhookId": "82cd3abe-9ad5-47a5-a184-9ac6fd9bffac",
      "credentials": {
        "githubApi": {
          "id": "X6bXppeDH36EAEvR",
          "name": "GitHub account"
        }
      },
      "continueOnFail": true
    },
    {
      "parameters": {
        "dataType": "string",
        "value1": "={{$json[\"github_status\"]}}",
        "rules": {
          "rules": [
            {
              "value2": "same"
            },
            {
              "value2": "different",
              "output": 1
            },
            {
              "value2": "new",
              "output": 2
            }
          ]
        }
      },
      "id": "8eef9b44-71d0-426b-8a2a-253f56ca50bb",
      "name": "github_status1",
      "type": "n8n-nodes-base.switch",
      "position": [
        900,
        1420
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "00cce77f-8ade-4570-8fa8-300f23785b1a",
      "name": "same1",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1140,
        1220
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "14df2480-7b21-46a1-a86d-12faba414e28",
      "name": "different1",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1140,
        1420
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "7c3b887f-ddc4-48ed-b90a-2f274e752291",
      "name": "new1",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1140,
        1600
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "edit",
        "owner": "={{$node[\"Globals\"].json[\"repo\"][\"owner\"]}}",
        "repository": {
          "__rl": true,
          "value": "={{ $('Globals').item.json.private.repo }}",
          "mode": ""
        },
        "filePath": "={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{$node[\"OneAtATime1\"].json[\"name\"]}}.json",
        "fileContent": "={{ $json.n8n_data_stringy }}",
        "commitMessage": "=[N8N Backup] {{$node[\"OneAtATime1\"].json[\"name\"]}}.json ({{$json[\"github_status\"]}})"
      },
      "id": "80b92316-3b3b-4ba9-9722-33e6aa6b8502",
      "name": "GitHub Edit1",
      "type": "n8n-nodes-base.github",
      "position": [
        1320,
        1420
      ],
      "typeVersion": 1,
      "webhookId": "bce2221b-2036-4620-a1c9-88bfb263f4bf",
      "credentials": {
        "githubApi": {
          "id": "X6bXppeDH36EAEvR",
          "name": "GitHub account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "resource": "file",
        "owner": "={{$node[\"Globals\"].json[\"repo\"][\"owner\"]}}",
        "repository": {
          "__rl": true,
          "value": "={{ $('Globals').item.json.private.repo }}",
          "mode": ""
        },
        "filePath": "={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{$node[\"OneAtATime1\"].json[\"name\"]}}.json",
        "fileContent": "={{ $json.n8n_data_stringy }}",
        "commitMessage": "=[N8N Backup] {{$node[\"OneAtATime1\"].json[\"name\"]}}.json ({{$json[\"github_status\"]}})"
      },
      "id": "3897661d-132a-4643-b801-556de801d1ff",
      "name": "GitHub Create1",
      "type": "n8n-nodes-base.github",
      "position": [
        1320,
        1600
      ],
      "typeVersion": 1,
      "webhookId": "feb0ba26-c9b1-4b26-aea4-0dc5c9c5a4a4",
      "credentials": {
        "githubApi": {
          "id": "X6bXppeDH36EAEvR",
          "name": "GitHub account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "batchSize": 1,
        "options": {}
      },
      "id": "21db18b3-f045-4289-8131-d78c256219fa",
      "name": "OneAtATime1",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        40,
        1440
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Save the data\nUsing the switch node we work out what to do based on the previous status,  If it is the same we do nothing, If it is different we update the file in Github and if it is new we create a new file. After this is done we loop back to the Split in Batches node (OneAtAtTime) to start the process again.",
        "height": 693.9283333333326,
        "width": 666.4416666666662
      },
      "id": "3054b115-ca0e-4182-bff7-348b63afcaca",
      "name": "Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        640,
        1100
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "11813e26-5218-4063-8386-17e384b412d4",
      "name": "Merge1",
      "type": "n8n-nodes-base.merge",
      "position": [
        480,
        1420
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "jsCode": "// File Returned with Content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Get JSON Objects\n  var origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64'));\n  var n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON Objects\n  var orderedOriginal = {}\n  var orderedActual = {}\n  \n  Object.keys(origWorkflow).sort().forEach(function(key) {\n    orderedOriginal[key] = origWorkflow[key];\n  });\n  \n  Object.keys(n8nWorkflow).sort().forEach(function(key) {\n    orderedActual[key] = n8nWorkflow[key];\n  });\n\n  // Determine Difference\n  if ( JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual) ) {\n    $input.all()[0].json.github_status = \"same\";\n    $input.all()[0].json.content_decoded = orderedOriginal;\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.content_decoded = orderedOriginal;\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n// No File Returned / New Workflow\n} else {\n  // Order JSON Object\n  var n8nWorkflow = ($input.all()[1].json);\n  var orderedActual = {}\n  Object.keys(n8nWorkflow).sort().forEach(function(key) {\n    orderedActual[key] = n8nWorkflow[key];\n  });\n  \n  // Proper Formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return Items\nreturn $input.all();"
      },
      "id": "afa3f61e-3a8e-4fc6-94bc-74a47fe6f248",
      "name": "isDiffOrNew1",
      "type": "n8n-nodes-base.code",
      "position": [
        660,
        1420
      ],
      "typeVersion": 1,
      "onError": "continueErrorOutput"
    }
  ],
  "pinData": {
    "Every 12 hours": [
      {
        "json": {}
      }
    ]
  },
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2024-09-01T11:17:14.764Z",
      "updatedAt": "2024-09-01T11:17:14.764Z",
      "role": "workflow:owner",
      "workflowId": "E8wFBJaLslhiBOP8",
      "projectId": "FYVdBnr1QQmYogvE"
    }
  ],
  "staticData": null,
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2025-05-28T00:12:48.000Z",
  "versionId": "03ef99cf-6cf3-4aa2-b532-ac0b67bca85d"
}